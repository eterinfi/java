package struct.control.exceptions;

class RemoteException extends Exception {
	private static final long serialVersionUID = 1L;
	RemoteException() {
		super("Remote Access Error!");
	}
}

class InsufficientFundsException extends Exception {
	private static final long serialVersionUID = 1L;
	InsufficientFundsException() {
		super("Insufficient Funds!");
	}
}

public class ThrowsThrowDemo {
	public static void main(String[] args) {
		try {
			deposit(100);
		} catch (RemoteException r) {
			r.getMessage();
		}
		try {
			withdraw(100);
		} catch (RemoteException r) {
			r.getMessage();
		} catch (InsufficientFundsException i) {
			i.getMessage();
		}
	}
	
	public static void deposit(double amount) throws RemoteException {
		// Method implementation
		throw new RemoteException();
	}
	
	public static void withdraw(double amount) 
			throws RemoteException, InsufficientFundsException {
		// Method implementation
		if (amount <= 0)
			throw new InsufficientFundsException();
		else
			throw new RemoteException();
	}
}